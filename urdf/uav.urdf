<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from uav.xacro                      | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="uav">

  <link name="base_link">
    <pose>0 0 0.12777262 0 0 0</pose>
    <inertial>
      <mass value="1.316"/>
      <inertia ixx="0.0128" ixy="0" ixz="0" iyy="0.0128" iyz="0" izz="0.0218"/>
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 -0.06"/>
      <geometry>
        <box size="0.55 0.55 0.1278"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://quadcopter/meshes/quadrotor_base.dae" scale="0.7 0.7 0.7"/>
      </geometry>
    </visual>
  </link>
  <link name="camera_support">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.08" radius="0.003"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.08" radius="0.003"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.01"/>
      <inertia ixx="5.3558e-06" ixy="0" ixz="0" iyy="5.3558e-06" iyz="0" izz="4.5e-08"/>
    </inertial>
  </link>
  <!-- ======================================================== -->
  <!-- ======================================================== -->
  <link name="camera_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.02 0.02 0.01"/>
      </geometry>
      <material name="red"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.02 0.02 0.01"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.05"/>
      <inertia ixx="2.08e-06" ixy="0" ixz="0" iyy="3.33e-06" iyz="0" izz="2.08e-06"/>
    </inertial>
  </link>
  <link name="depth_camera_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.0292 0.1104 0.0292"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.0292 0.1104 0.0292"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="0.00010867" ixy="0" ixz="0" iyy="1.421e-05" iyz="0" izz="0.00010867"/>
    </inertial>
  </link>
  <link name="lidar_base">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.028 0.03 0.03"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.028 0.03 0.03"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.05"/>
      <inertia ixx="7.5e-06" ixy="0" ixz="0" iyy="7.017e-06" iyz="0" izz="7.017e-06"/>
    </inertial>
  </link>
  <link name="lidar_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.0185" radius="0.0105"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.0185" radius="0.0105"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="5.608e-06" ixy="0" ixz="0" iyy="5.608e-06" iyz="0" izz="5.5125e-06"/>
    </inertial>
  </link>
  <link name="camera_optical_link"/>
  <joint name="base_camera_support" type="fixed">
    <parent link="base_link"/>
    <child link="camera_support"/>
    <origin rpy="0 0 0" xyz="0 0 -0.04"/>
    <axis xyz="0 0 1"/>
  </joint>
  <joint name="camera_joint" type="fixed">
    <parent link="camera_support"/>
    <child link="camera_link"/>
    <origin rpy="0 0 0" xyz="0 0 -0.045"/>
    <axis xyz="0 0 1"/>
  </joint>
  <joint name="base_depthcam_joint" type="fixed">
    <parent link="base_link"/>
    <child link="depth_camera_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.020"/>
    <axis xyz="0 0 1"/>
  </joint>
  <joint name="depth_optical_joint" type="fixed">
    <parent link="depth_camera_link"/>
    <child link="camera_optical_link"/>
    <origin rpy="-1.5708 0 -1.5708" xyz="0 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>
  <joint name="box_depthcam" type="fixed">
    <parent link="depth_camera_link"/>
    <child link="lidar_base"/>
    <origin rpy="0 0 0" xyz="0 0 0.020"/>
    <axis xyz="0 0 1"/>
  </joint>
  <joint name="lidar_box" type="fixed">
    <parent link="lidar_base"/>
    <child link="lidar_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.0255"/>
    <axis xyz="0 0 1"/>
  </joint>


  <gazebo reference="base_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>uav_imu</topicName>
        <bodyName>base_link</bodyName>
        <updateRateHZ>100.0</updateRateHZ>
        <gaussianNoise>0.0001</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>uav_imu</frameName>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>
  <gazebo reference="camera_link">
    <sensor name="camera" type="camera">
      <update_rate>20</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>10</update_rate>
      <visualize>true</visualize>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>quadcopter/camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="depth_camera_link">
    <sensor name="camera_ir" type="depth">
      <update_rate>10</update_rate>
      <camera>
        <horizontal_fov>1.047198</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>3</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="camera_plugin">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <!--Keep this zero, update_rate in the parent <sensor> tag
           will control the frame rate. -->
        <updateRate>0.0</updateRate>
        <cameraName>camera_ir</cameraName>
        <imageTopicName>/camera_ir/color/image_raw</imageTopicName>
        <cameraInfoTopicName>/camera_ir/color/camera_info</cameraInfoTopicName>
        <depthImageTopicName>/camera_ir/depth/image_raw</depthImageTopicName>
        <depthImageCameraInfoTopicName>/camera_ir/depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudTopicName>/camera_ir/depth/points</pointCloudTopicName>
        <frameName>camera_optical_link</frameName>
        <pointCloudCutoff>0.5</pointCloudCutoff>
        <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
        <distortionK1>0</distortionK1>
        <distortionK2>0</distortionK2>
        <distortionK3>0</distortionK3>
        <distortionT1>0</distortionT1>
        <distortionT2>0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="lidar_link">
    <sensor name="head_hokuyo_sensor" type="ray">
      <pose>0 0 0.5 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>480</samples>
            <resolution>1</resolution>
            <min_angle>-3.141593</min_angle>
            <max_angle>3.141593</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.1</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               			achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               			stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               			reading. -->
          <mean>0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_head_hokuyo_controller">
        <topicName>/quadcopter/laser/scan</topicName>
        <frameName>lidar_link</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_p3d.so" name="pose_3d_plugin">
      <bodyName>base_link</bodyName>
      <topicName>uav_pos</topicName>
      <frameName>world</frameName>
      <gaussianNoise>0.01</gaussianNoise>
      <updateRate>10</updateRate>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libcontrol_plugin.so" name="uav_fm">
      <bodyName>base_link</bodyName>
      <topicName>uav_fm</topicName>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin name="object_controller" filename="libgazebo_ros_planar_move.so">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>/odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometryRate>20.0</odometryRate>
      <robotBaseFrame>base_link</robotBaseFrame>
    </plugin>
  </gazebo>
  
</robot>

